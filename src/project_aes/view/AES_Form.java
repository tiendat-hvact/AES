/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_aes.view;

import java.io.UnsupportedEncodingException;
import java.util.Base64;
import javax.swing.JOptionPane;
import javax.xml.bind.DatatypeConverter;
import project_aes.controller.AES_Controller;

/**
 *
 * @author ADMIN
 */
public class AES_Form extends javax.swing.JFrame {

    /**
     * Creates new form AES_Form
     */
    private final AES_Controller aesc;
    private long startTime;
    private long endTime;

    public AES_Form() {
        initComponents();
        this.aesc = new AES_Controller();
        this.setTitle("AES Encryption");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        keyTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputEncrytedTxtArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputDecrytedTxtArea = new javax.swing.JTextArea();
        decrytedBtn = new javax.swing.JButton();
        encrytedBtn = new javax.swing.JButton();
        keyLengthCbx = new javax.swing.JComboBox<>();
        outputEncTypeCbx = new javax.swing.JComboBox<>();
        inputEncTypeCbx = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        keyTypeCbx = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        keyLengthLabel = new javax.swing.JLabel();
        timeRunningEncLabel = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        inputEncrytedTxtArea = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        outputDecrytedTxtArea = new javax.swing.JTextArea();
        outputDecTypeCbx = new javax.swing.JComboBox<>();
        inputDecTypeCbx = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        timeRunningDecLabel = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        jLabel5.setText("Encrypted text");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Key");

        keyTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                keyTxtFocusLost(evt);
            }
        });

        outputEncrytedTxtArea.setColumns(20);
        outputEncrytedTxtArea.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        outputEncrytedTxtArea.setLineWrap(true);
        outputEncrytedTxtArea.setRows(5);
        outputEncrytedTxtArea.setText("Result of encoding process");
        outputEncrytedTxtArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(outputEncrytedTxtArea);

        inputDecrytedTxtArea.setColumns(20);
        inputDecrytedTxtArea.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        inputDecrytedTxtArea.setLineWrap(true);
        inputDecrytedTxtArea.setRows(5);
        inputDecrytedTxtArea.setText("Input text you want to decrypted");
        jScrollPane2.setViewportView(inputDecrytedTxtArea);

        decrytedBtn.setAlignmentY(0.0F);
        decrytedBtn.setLabel("Decrypted");
        decrytedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrytedBtnActionPerformed(evt);
            }
        });

        encrytedBtn.setText("Encrypted");
        encrytedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encrytedBtnActionPerformed(evt);
            }
        });

        keyLengthCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "128 bits", "192 bits", "256 bits" }));

        outputEncTypeCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Base64", "Hexa" }));

        inputEncTypeCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UTF-8", "Hexa" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("MÃ HÓA AES - ADVANCED ENCRYPTION STANDARD");

        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("Yêu cầu cần nhập đúng độ dài khóa ứng với từng loại khóa:");

        jLabel6.setText("Khóa 128 bits - 16 ký tự");

        jLabel7.setText("Khóa 192 bits - 24 ký tự");

        jLabel8.setText("Khóa 256 bits - 32 ký tự");

        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("Yêu cầu nhập đúng định dạng đầu vào với dạng ký tự đã chọn:");

        jLabel13.setText("UTF-8 - Có thể nhập kí tự đặc biệt, số, khoảng trắng, chữ không dấu và có dấu");

        jLabel14.setText("Hexa  - Chỉ được phép nhập các số Hexa, khoảng trắng");

        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("Độ dài khóa:");

        keyTypeCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UTF-8", "Hexa" }));
        keyTypeCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                keyTypeCbxItemStateChanged(evt);
            }
        });

        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("Thời gian chạy:");

        keyLengthLabel.setText("0 ký tự");

        timeRunningEncLabel.setText("0 ms");

        jLabel16.setText("Base64 - Có thể nhập kí tự đặc biệt, số, chữ không dấu");

        inputEncrytedTxtArea.setColumns(20);
        inputEncrytedTxtArea.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        inputEncrytedTxtArea.setLineWrap(true);
        inputEncrytedTxtArea.setRows(5);
        inputEncrytedTxtArea.setText("Input text you want to encrypted");
        inputEncrytedTxtArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane4.setViewportView(inputEncrytedTxtArea);

        outputDecrytedTxtArea.setColumns(20);
        outputDecrytedTxtArea.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        outputDecrytedTxtArea.setLineWrap(true);
        outputDecrytedTxtArea.setRows(5);
        outputDecrytedTxtArea.setText("Result of decoding process");
        outputDecrytedTxtArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane5.setViewportView(outputDecrytedTxtArea);

        outputDecTypeCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UTF-8", "Hexa" }));

        inputDecTypeCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Base64", "Hexa" }));

        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("Thời gian chạy:");

        timeRunningDecLabel.setText("0 ms");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(keyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(keyLengthCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(keyTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(keyLengthLabel))
                                    .addComponent(jLabel12)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inputEncTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(timeRunningEncLabel))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(encrytedBtn)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(outputEncTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inputDecTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19)
                                        .addGap(18, 18, 18)
                                        .addComponent(timeRunningDecLabel))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(decrytedBtn)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(outputDecTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keyLengthCbx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(keyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(keyTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(keyLengthLabel))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputEncTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputEncTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(timeRunningEncLabel)))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(encrytedBtn)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(outputDecTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(timeRunningDecLabel)))
                    .addComponent(inputDecTypeCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(decrytedBtn)
                        .addGap(74, 74, 74))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encrytedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encrytedBtnActionPerformed
        Boolean check = true;
        if (!this.aesc.checkKeyLength(keyTxt.getText(), keyLengthCbx.getSelectedItem().toString(), keyTypeCbx.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Độ dài khóa nhập vào không hợp lệ", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
            check = false;
        } else if (inputEncTypeCbx.getSelectedItem().toString().equals("Hexa")) {
            String input = inputEncrytedTxtArea.getText().replaceAll(" ", "");
            if (!input.matches("^[A-Fa-f0-9]+$")) {
                JOptionPane.showMessageDialog(this, "Chuỗi nhập vào không hợp lệ", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
                check = false;
            }
        }
        if (check) {
            try {
                startTime = System.currentTimeMillis();
                this.aesc.formatkey(keyTxt.getText(), keyTypeCbx.getSelectedItem().toString());
                this.aesc.formatInput(inputEncrytedTxtArea.getText(), inputEncTypeCbx.getSelectedItem().toString());
                this.aesc.encrptionAES();
                outputEncrytedTxtArea.setText(this.aesc.formatOutput(outputEncTypeCbx.getSelectedItem().toString()));
                endTime = System.currentTimeMillis();
                timeRunningEncLabel.setText((endTime - startTime) + " ms");
            } catch (UnsupportedEncodingException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_encrytedBtnActionPerformed

    private void decrytedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrytedBtnActionPerformed
        Boolean check = true;
        if (!this.aesc.checkKeyLength(keyTxt.getText(), keyLengthCbx.getSelectedItem().toString(), keyTypeCbx.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Độ dài khóa nhập vào không hợp lệ", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
            check = false;
        } else if (inputDecTypeCbx.getSelectedItem().toString().equals("Hexa")) {
            String input = inputDecrytedTxtArea.getText().replaceAll(" ", "");
            if (!input.matches("^[A-Fa-f0-9]+$") || (input.length() % 32 != 0)) {
                JOptionPane.showMessageDialog(this, "Chuỗi nhập vào không hợp lệ", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
                check = false;
            }
        } else if (inputDecTypeCbx.getSelectedItem().toString().equals("Base64")) {
            String input = inputDecrytedTxtArea.getText();
            input = DatatypeConverter.printHexBinary(Base64.getDecoder().decode(input));
            if (input.length() % 16 != 0) {
                JOptionPane.showMessageDialog(this, "Chuỗi nhập vào không hợp lệ", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
                check = false;
            }
        }

        if (check) {
            try {
                startTime = System.currentTimeMillis();
                this.aesc.formatkey(keyTxt.getText(), keyTypeCbx.getSelectedItem().toString());
                this.aesc.formatInput(inputDecrytedTxtArea.getText(), inputDecTypeCbx.getSelectedItem().toString());
                this.aesc.decryptionAES();
                outputDecrytedTxtArea.setText(this.aesc.formatOutput(outputDecTypeCbx.getSelectedItem().toString()));
                endTime = System.currentTimeMillis();
                timeRunningDecLabel.setText((endTime - startTime) + " ms");
            } catch (UnsupportedEncodingException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_decrytedBtnActionPerformed

    private void keyTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyTxtFocusLost
        int length = keyTxt.getText().length();
        if (keyTypeCbx.getSelectedItem().toString().equals("UTF-8")) {
            keyLengthLabel.setText(length + " ký tự");
        } else {
            keyLengthLabel.setText((length * 4) + " bits");
        }
    }//GEN-LAST:event_keyTxtFocusLost

    private void keyTypeCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_keyTypeCbxItemStateChanged
        int length = keyTxt.getText().length();
        if (keyTypeCbx.getSelectedItem().toString().equals("UTF-8")) {
            keyLengthLabel.setText(length + " ký tự");
        } else {
            keyLengthLabel.setText((length * 4) + " bits");
        }
    }//GEN-LAST:event_keyTypeCbxItemStateChanged

    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AES_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AES_Form().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decrytedBtn;
    private javax.swing.JButton encrytedBtn;
    private javax.swing.JComboBox<String> inputDecTypeCbx;
    private javax.swing.JTextArea inputDecrytedTxtArea;
    private javax.swing.JComboBox<String> inputEncTypeCbx;
    private javax.swing.JTextArea inputEncrytedTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JComboBox<String> keyLengthCbx;
    private javax.swing.JLabel keyLengthLabel;
    private javax.swing.JTextField keyTxt;
    private javax.swing.JComboBox<String> keyTypeCbx;
    private javax.swing.JComboBox<String> outputDecTypeCbx;
    private javax.swing.JTextArea outputDecrytedTxtArea;
    private javax.swing.JComboBox<String> outputEncTypeCbx;
    private javax.swing.JTextArea outputEncrytedTxtArea;
    private javax.swing.JLabel timeRunningDecLabel;
    private javax.swing.JLabel timeRunningEncLabel;
    // End of variables declaration//GEN-END:variables
}
